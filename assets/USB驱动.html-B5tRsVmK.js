import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as n,o as i}from"./app-DIMvcjhy.js";const r={};function o(p,e){return i(),a("div",null,e[0]||(e[0]=[n('<div class="hint-container info"><p class="hint-container-title">相关信息</p><p>USB（通用串行总线）驱动用于支持通过 USB 接口连接的设备（如键盘、摄像头等）。在 Linux 中，USB 驱动分为主机控制器驱动（管理 USB 总线）和设备驱动（管理具体设备）。</p></div><h2 id="开发流程" tabindex="-1"><a class="header-anchor" href="#开发流程"><span>开发流程</span></a></h2><h3 id="设备-id-注册" tabindex="-1"><a class="header-anchor" href="#设备-id-注册"><span>设备 ID 注册</span></a></h3><p>通过 udev 规则设置设备的 vendor_id 和 product_id，确保内核能识别设备并加载对应驱动。</p><h3 id="驱动框架搭建" tabindex="-1"><a class="header-anchor" href="#驱动框架搭建"><span>驱动框架搭建</span></a></h3><p>定义 usb_driver 结构体，包含 .probe()、.disconnect() 等回调函数。</p><p>使用 usb_register() 注册驱动到内核7。</p><h3 id="数据传输实现" tabindex="-1"><a class="header-anchor" href="#数据传输实现"><span>数据传输实现</span></a></h3><p>通过 usb_bulk_msg() 或 usb_control_msg() 实现设备读写操作。</p><h3 id="中断处理" tabindex="-1"><a class="header-anchor" href="#中断处理"><span>中断处理</span></a></h3><p>注册中断处理函数以响应设备事件（如数据传输完成）。</p><h3 id="模块加载与测试" tabindex="-1"><a class="header-anchor" href="#模块加载与测试"><span>模块加载与测试</span></a></h3><p>编译为 .ko 模块，通过 insmod 加载并验证功能。</p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2><ul><li><a href="https://www.dbs724.com/148143.html" target="_blank" rel="noopener noreferrer">https://www.dbs724.com/148143.html</a></li></ul>',15)]))}const c=t(r,[["render",o]]),h=JSON.parse('{"path":"/OS/Linux/USB%E9%A9%B1%E5%8A%A8.html","title":"USB驱动","lang":"zh-CN","frontmatter":{"title":"USB驱动","date":"2023-02-28T19:00:00.000Z","icon":"icon-park:solid-state-disk","tags":["Driver","USB"],"categories":["OS","Linux"],"description":"相关信息 USB（通用串行总线）驱动用于支持通过 USB 接口连接的设备（如键盘、摄像头等）。在 Linux 中，USB 驱动分为主机控制器驱动（管理 USB 总线）和设备驱动（管理具体设备）。 开发流程 设备 ID 注册 通过 udev 规则设置设备的 vendor_id 和 product_id，确保内核能识别设备并加载对应驱动。 驱动框架搭建 定...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"USB驱动\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-28T19:00:00.000Z\\",\\"dateModified\\":\\"2025-05-03T03:29:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ReWi\\",\\"url\\":\\"https://gitee.com/re-wi\\",\\"email\\":\\"RejoiceWindow@yeah.net\\"},{\\"@type\\":\\"Person\\",\\"name\\":\\"ReWi\\",\\"url\\":\\"https://github.com/Re-Wi/\\",\\"email\\":\\"RejoiceWindow@yeah.net\\"},{\\"@type\\":\\"Person\\",\\"name\\":\\"RejoiceWindow\\"}]}"],["meta",{"property":"og:url","content":"https://em.rewi.xyz/OS/Linux/USB%E9%A9%B1%E5%8A%A8.html"}],["meta",{"property":"og:site_name","content":"EmbedReWi"}],["meta",{"property":"og:title","content":"USB驱动"}],["meta",{"property":"og:description","content":"相关信息 USB（通用串行总线）驱动用于支持通过 USB 接口连接的设备（如键盘、摄像头等）。在 Linux 中，USB 驱动分为主机控制器驱动（管理 USB 总线）和设备驱动（管理具体设备）。 开发流程 设备 ID 注册 通过 udev 规则设置设备的 vendor_id 和 product_id，确保内核能识别设备并加载对应驱动。 驱动框架搭建 定..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-03T03:29:51.000Z"}],["meta",{"property":"article:tag","content":"USB"}],["meta",{"property":"article:tag","content":"Driver"}],["meta",{"property":"article:published_time","content":"2023-02-28T19:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-03T03:29:51.000Z"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://em.rewi.xyz/rss.xml","title":"EmbedReWi RSS Feed"}]]},"git":{"createdTime":1746242991000,"updatedTime":1746242991000,"contributors":[{"name":"ReWi","username":"","email":"RejoiceWindow@yeah.net","commits":1}]},"readingTime":{"minutes":0.76,"words":229},"filePathRelative":"OS/Linux/USB驱动.md","localizedDate":"2023年3月1日","excerpt":"<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">相关信息</p>\\n<p>USB（通用串行总线）驱动用于支持通过 USB 接口连接的设备（如键盘、摄像头等）。在 Linux 中，USB 驱动分为主机控制器驱动（管理 USB 总线）和设备驱动（管理具体设备）。</p>\\n</div>\\n<h2>开发流程</h2>\\n<h3>设备 ID 注册</h3>\\n<p>通过 udev 规则设置设备的 vendor_id 和 product_id，确保内核能识别设备并加载对应驱动。</p>\\n<h3>驱动框架搭建</h3>\\n<p>定义 usb_driver 结构体，包含 .probe()、.disconnect() 等回调函数。</p>","autoDesc":true}');export{c as comp,h as data};
