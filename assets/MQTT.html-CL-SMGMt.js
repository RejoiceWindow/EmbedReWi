import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,d as a,o as e}from"./app-DIMvcjhy.js";const l={};function t(p,i){return e(),n("div",null,i[0]||(i[0]=[a(`<h2 id="mqtt-message-queuing-telemetry-transport" tabindex="-1"><a class="header-anchor" href="#mqtt-message-queuing-telemetry-transport"><span>MQTT（Message Queuing Telemetry Transport）</span></a></h2><p>MQTT 是一种轻量级的、基于发布/订阅模式的消息传输协议，专为低带宽、不稳定网络环境设计，广泛应用于物联网（IoT）设备间的通信。它有以下几个特点：</p><ol><li><p><strong>轻量级和高效</strong>：</p><ul><li>MQTT 消息头部非常小，通常在 2 字节左右，非常适合低带宽网络。</li></ul></li><li><p><strong>发布/订阅模式</strong>：</p><ul><li>设备（客户端）可以发布消息到特定主题（topic），也可以订阅一个或多个主题，服务器（Broker）负责转发消息。</li></ul></li><li><p><strong>可靠性</strong>：</p><ul><li>提供三种服务质量（QoS）级别：QoS 0（最多一次），QoS 1（至少一次），QoS 2（仅一次），以满足不同的可靠性需求。</li></ul></li><li><p><strong>持久化会话</strong>：</p><ul><li>支持持久化会话，客户端可以在重新连接时恢复未完成的消息传输。</li></ul></li><li><p><strong>简便的实现</strong>：</p><ul><li>协议设计简洁，容易实现和嵌入到资源受限的设备中。</li></ul></li></ol><h2 id="emqx-erlang-mqtt-broker" tabindex="-1"><a class="header-anchor" href="#emqx-erlang-mqtt-broker"><span>EMQX（Erlang MQTT Broker）</span></a></h2><p>EMQX 是一个开源的、高可扩展性的 MQTT 消息服务器（Broker），用 Erlang/OTP 语言开发。它是业界性能和稳定性最优秀的 MQTT Broker 之一，具有以下特点：</p><ol><li><p><strong>高并发</strong>：</p><ul><li>由于 Erlang/OTP 的高并发特性，EMQX 可以处理数百万个 MQTT 连接。</li></ul></li><li><p><strong>高可用性和容错</strong>：</p><ul><li>支持分布式部署，可以在节点之间进行负载均衡，并且具有强大的容错能力。</li></ul></li><li><p><strong>多协议支持</strong>：</p><ul><li>除了 MQTT，EMQX 还支持 WebSocket、HTTP、CoAP 等多种协议，方便不同类型的客户端接入。</li></ul></li><li><p><strong>丰富的插件系统</strong>：</p><ul><li>提供了丰富的插件，如认证、授权、监控、数据持久化等，用户可以根据需求进行扩展。</li></ul></li><li><p><strong>集成和扩展性</strong>：</p><ul><li>支持与多种数据库、消息队列（如 Redis、Kafka、RabbitMQ）和云服务（如 AWS、Azure、Aliyun）集成，方便构建复杂的 IoT 系统。</li></ul></li></ol><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h2><p><strong>使用 MQTT 协议的简单示例</strong></p><p>发布者（Publisher）：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> paho.mqtt.client </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> mqtt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">broker_address </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;test.mosquitto.org&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">client </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> mqtt.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Client</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Publisher&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">client.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">connect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(broker_address)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">client.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">publish</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;house/sensor1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Hello MQTT&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">client.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">disconnect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>订阅者（Subscriber）：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> paho.mqtt.client </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> mqtt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> on_message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">client</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> userdata</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Received message: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">message.payload.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">decode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> on topic </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">message.topic</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">broker_address </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;test.mosquitto.org&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">client </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> mqtt.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Client</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Subscriber&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">client.on_message </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> on_message</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">client.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">connect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(broker_address)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">client.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">subscribe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;house/sensor1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">client.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">loop_forever</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>使用 EMQX 的配置示例</strong></p><ol><li><p><strong>安装和启动 EMQX</strong>：</p><ul><li>下载 EMQX 安装包并按照官方文档进行安装。</li><li>启动 EMQX 服务：<code>./bin/emqx start</code></li></ul></li><li><p><strong>配置 EMQX</strong>：</p><ul><li>可以通过修改 <code>etc/emqx.conf</code> 文件进行配置，例如设置监听端口、启用插件等。</li><li>也可以通过 EMQX Dashboard（默认地址为 <code>http://localhost:18083</code>）进行图形化管理和配置。</li></ul></li><li><p><strong>使用 EMQX 进行消息发布和订阅</strong>：</p><ul><li>使用上述 MQTT 客户端代码，通过更改 <code>broker_address</code> 为 EMQX 服务器地址进行消息发布和订阅。</li></ul></li></ol><h2 id="结束语" tabindex="-1"><a class="header-anchor" href="#结束语"><span>结束语</span></a></h2><p>MQTT 是一种轻量级、高效的消息传输协议，非常适合物联网设备的通信。而 EMQX 作为一款高性能的 MQTT Broker，提供了强大的并发处理能力、可扩展性和丰富的功能，能够很好地满足大规模物联网系统的需求。如果您对构建高性能、稳定的 IoT 系统感兴趣，建议进一步研究和使用 EMQX 和 MQTT 协议。</p>`,16)]))}const k=s(l,[["render",t]]),o=JSON.parse('{"path":"/protocol/MQTT.html","title":"MQTT","lang":"zh-CN","frontmatter":{"title":"MQTT","description":"EMQX、MQTT","date":"2025-04-29T14:48:00.000Z","icon":"carbon:tcp-ip-service","tag":["MQTT"],"category":["protocol"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MQTT\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-04-29T14:48:00.000Z\\",\\"dateModified\\":\\"2025-04-29T07:17:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ReWi\\",\\"url\\":\\"https://gitee.com/re-wi\\",\\"email\\":\\"RejoiceWindow@yeah.net\\"},{\\"@type\\":\\"Person\\",\\"name\\":\\"ReWi\\",\\"url\\":\\"https://github.com/Re-Wi/\\",\\"email\\":\\"RejoiceWindow@yeah.net\\"},{\\"@type\\":\\"Person\\",\\"name\\":\\"RejoiceWindow\\"}]}"],["meta",{"property":"og:url","content":"https://em.rewi.xyz/protocol/MQTT.html"}],["meta",{"property":"og:site_name","content":"EmbedReWi"}],["meta",{"property":"og:title","content":"MQTT"}],["meta",{"property":"og:description","content":"EMQX、MQTT"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-29T07:17:06.000Z"}],["meta",{"property":"article:tag","content":"MQTT"}],["meta",{"property":"article:published_time","content":"2025-04-29T14:48:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-29T07:17:06.000Z"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://em.rewi.xyz/rss.xml","title":"EmbedReWi RSS Feed"}]]},"git":{"createdTime":1745911026000,"updatedTime":1745911026000,"contributors":[{"name":"ReWi","username":"","email":"RejoiceWindow@yeah.net","commits":1}]},"readingTime":{"minutes":2.76,"words":827},"filePathRelative":"protocol/MQTT.md","localizedDate":"2025年4月29日","excerpt":"<h2>MQTT（Message Queuing Telemetry Transport）</h2>\\n<p>MQTT 是一种轻量级的、基于发布/订阅模式的消息传输协议，专为低带宽、不稳定网络环境设计，广泛应用于物联网（IoT）设备间的通信。它有以下几个特点：</p>\\n<ol>\\n<li>\\n<p><strong>轻量级和高效</strong>：</p>\\n<ul>\\n<li>MQTT 消息头部非常小，通常在 2 字节左右，非常适合低带宽网络。</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>发布/订阅模式</strong>：</p>\\n<ul>\\n<li>设备（客户端）可以发布消息到特定主题（topic），也可以订阅一个或多个主题，服务器（Broker）负责转发消息。</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>可靠性</strong>：</p>\\n<ul>\\n<li>提供三种服务质量（QoS）级别：QoS 0（最多一次），QoS 1（至少一次），QoS 2（仅一次），以满足不同的可靠性需求。</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>持久化会话</strong>：</p>\\n<ul>\\n<li>支持持久化会话，客户端可以在重新连接时恢复未完成的消息传输。</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>简便的实现</strong>：</p>\\n<ul>\\n<li>协议设计简洁，容易实现和嵌入到资源受限的设备中。</li>\\n</ul>\\n</li>\\n</ol>"}');export{k as comp,o as data};
