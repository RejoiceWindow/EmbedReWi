import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,d as n,o}from"./app-DIMvcjhy.js";const i={};function a(p,t){return o(),r("div",null,t[0]||(t[0]=[n('<h2 id="osi-七层模型" tabindex="-1"><a class="header-anchor" href="#osi-七层模型"><span>OSI 七层模型</span></a></h2><ol><li><p><strong>物理层（Physical Layer）</strong><br> 定义物理连接和传输媒体，如电缆、光纤、无线电波。</p></li><li><p><strong>数据链路层（Data Link Layer）</strong><br> 提供节点间的数据传输和错误检测功能，如 Ethernet。</p></li><li><p><strong>网络层（Network Layer）</strong><br> 负责数据包的路由和转发，如 IP。</p></li><li><p><strong>传输层（Transport Layer）</strong><br> 提供端到端的传输服务和流量控制，如 TCP、UDP。</p></li><li><p><strong>会话层（Session Layer）</strong><br> 管理会话和连接，如 NetBIOS。</p></li><li><p><strong>表示层（Presentation Layer）</strong><br> 处理数据的编码和解码，如 SSL/TLS。</p></li><li><p><strong>应用层（Application Layer）</strong><br> 提供应用程序之间的通信，如 HTTP、FTP。</p></li></ol><h2 id="tcp-ip-四层模型" tabindex="-1"><a class="header-anchor" href="#tcp-ip-四层模型"><span>TCP/IP 四层模型</span></a></h2><ol><li><p><strong>网络接口层 / 链路层（Network Interface / Link Layer）</strong><br> 对应 OSI 的物理层和数据链路层，如 Ethernet、PPP。</p></li><li><p><strong>互联网层 / 网络层（Internet / Network Layer）</strong><br> 对应 OSI 的网络层，如 IP、ICMP。</p></li><li><p><strong>传输层（Transport Layer）</strong><br> 对应 OSI 的传输层，如 TCP、UDP。</p></li><li><p><strong>应用层（Application Layer）</strong><br> 对应 OSI 的会话层、表示层和应用层，如 HTTP、SMTP、DNS。</p></li></ol>',4)]))}const c=e(i,[["render",a]]),g=JSON.parse('{"path":"/protocol/%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE.html","title":"网络通信协议","lang":"zh-CN","frontmatter":{"title":"网络通信协议","description":"网络通信协议","date":"2025-04-29T14:50:00.000Z","icon":"zondicons:network","tag":["network"],"category":["protocol"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"网络通信协议\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-04-29T14:50:00.000Z\\",\\"dateModified\\":\\"2025-04-29T07:17:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ReWi\\",\\"url\\":\\"https://gitee.com/re-wi\\",\\"email\\":\\"RejoiceWindow@yeah.net\\"},{\\"@type\\":\\"Person\\",\\"name\\":\\"ReWi\\",\\"url\\":\\"https://github.com/Re-Wi/\\",\\"email\\":\\"RejoiceWindow@yeah.net\\"},{\\"@type\\":\\"Person\\",\\"name\\":\\"RejoiceWindow\\"}]}"],["meta",{"property":"og:url","content":"https://em.rewi.xyz/protocol/%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE.html"}],["meta",{"property":"og:site_name","content":"EmbedReWi"}],["meta",{"property":"og:title","content":"网络通信协议"}],["meta",{"property":"og:description","content":"网络通信协议"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-29T07:17:06.000Z"}],["meta",{"property":"article:tag","content":"network"}],["meta",{"property":"article:published_time","content":"2025-04-29T14:50:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-29T07:17:06.000Z"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://em.rewi.xyz/rss.xml","title":"EmbedReWi RSS Feed"}]]},"git":{"createdTime":1745911026000,"updatedTime":1745911026000,"contributors":[{"name":"ReWi","username":"","email":"RejoiceWindow@yeah.net","commits":1}]},"readingTime":{"minutes":0.94,"words":282},"filePathRelative":"protocol/网络通信协议.md","localizedDate":"2025年4月29日","excerpt":"<h2>OSI 七层模型</h2>\\n<ol>\\n<li>\\n<p><strong>物理层（Physical Layer）</strong><br>\\n定义物理连接和传输媒体，如电缆、光纤、无线电波。</p>\\n</li>\\n<li>\\n<p><strong>数据链路层（Data Link Layer）</strong><br>\\n提供节点间的数据传输和错误检测功能，如 Ethernet。</p>\\n</li>\\n<li>\\n<p><strong>网络层（Network Layer）</strong><br>\\n负责数据包的路由和转发，如 IP。</p>\\n</li>\\n<li>\\n<p><strong>传输层（Transport Layer）</strong><br>\\n提供端到端的传输服务和流量控制，如 TCP、UDP。</p>\\n</li>\\n<li>\\n<p><strong>会话层（Session Layer）</strong><br>\\n管理会话和连接，如 NetBIOS。</p>\\n</li>\\n<li>\\n<p><strong>表示层（Presentation Layer）</strong><br>\\n处理数据的编码和解码，如 SSL/TLS。</p>\\n</li>\\n<li>\\n<p><strong>应用层（Application Layer）</strong><br>\\n提供应用程序之间的通信，如 HTTP、FTP。</p>\\n</li>\\n</ol>"}');export{c as comp,g as data};
